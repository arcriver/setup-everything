name: "Install Trivy"
description: "Installs a specific version of Trivy"

inputs:
  version:
    description: "Version of Trivy to install"
    required: true
    default: "v0.62.1"

  architecture:
    description: "Target architecture (e.g. 64bit, ARM64)"
    required: true
    default: "64bit"

  sha256:
    description: "SHA256 checksum to verify the downloaded tarball"
    required: true

  install-dir:
    description: "Directory to install Trivy"
    required: false
    default: "/usr/local/bin"

runs:
  using: "composite"
  steps:
    - name: Create temp directory
      id: create-temp-directory
      shell: bash
      run: |
        echo "::group::Creating temporary directory"
        TEMP_DIR=$(mktemp -d)
        echo "temp_dir=$TEMP_DIR" >> $GITHUB_OUTPUT
        echo "::endgroup::"

    - name: Download Trivy release asset
      id: download-trivy
      shell: bash
      env:
        GH_TOKEN: "${{ github.token }}"
        TEMP_DIR: "${{ steps.create-temp-directory.outputs.temp_dir }}"
        VERSION: "${{ inputs.version }}"
        ARCHITECTURE: "${{ inputs.architecture }}"
      run: |
        echo "::group::Downloading Trivy release asset"

        gh release download "$VERSION" \
          --repo aquasecurity/trivy \
          --pattern "trivy_${VERSION#v}_Linux-${ARCHITECTURE}.tar.gz" \
          --dir "$TEMP_DIR"

        TARBALL=$(find "$TEMP_DIR" -name "trivy_${VERSION#v}_Linux-${ARCHITECTURE}.tar.gz")
        if [ -z "$TARBALL" ]; then
          echo "::error::Failed to download Trivy release asset."
          exit 1
        fi

        echo "tarball=$TARBALL" >> $GITHUB_OUTPUT

        echo "::endgroup::"

    - name: Verify checksum
      shell: bash
      env:
        SHA256: "${{ inputs.sha256 }}"
        TARBALL: "${{ steps.download-trivy.outputs.tarball }}"
      run: |
        echo "::group::Verifying checksum"

        if ! echo "${SHA256}  ${TARBALL}" | sha256sum -c -; then
          echo "::error::Checksum verification failed! The downloaded file does not match the expected SHA256 checksum."
          exit 1
        fi

        echo "::endgroup::"

    - name: Extract Trivy
      shell: bash
      env:
        TARBALL: "${{ steps.download-trivy.outputs.tarball }}"
        TEMP_DIR: "${{ steps.create-temp-directory.outputs.temp_dir }}"
      run: |
        echo "::group::Extracting Trivy"
        tar -xzf "${TARBALL}" -C "${TEMP_DIR}"
        echo "::endgroup::"

    - name: Install Trivy
      shell: bash
      env:
        TEMP_DIR: "${{ steps.create-temp-directory.outputs.temp_dir }}"
        INSTALL_DIR: "${{ inputs.install-dir }}"
      run: |
        echo "::group::Installing Trivy"
        sudo cp "${TEMP_DIR}/trivy" "${INSTALL_DIR}/trivy"
        sudo chmod +x "${INSTALL_DIR}/trivy"
        echo "::endgroup::"

    - name: Verify installation
      shell: bash
      run: trivy --version
